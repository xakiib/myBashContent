00477948537501
docker exec --privileged 636a  ls -1 /home/aof_api/node_modules |grep query


curl -H "Accept: application/json" -H "Content-Type: application/json" -X GET http://10.200.65.226:10075/web/services/srvusra/ET0801/ET0801

curl -H "Accept: application/json" -H "Content-Type: application/json" -X GET http://10.200.65.226:10010/web/services/srvusra/ET0801/ET0801


curl --header "Content-Type: application/json" --request POST --data '{"username":"ET0801","password":"ET0801"}'  http://10.200.68.170:9131/mysisAuthentication/


 docker container run -p 9133:7000 --net=aof-net apiimage

Default location of nginx project 
 :/usr/share/nginx/html
 
docker cp  aof_api/controllers/.  ac69:/home/aof_api/controllers/


 docker container run -p 9136:7000 --net=aof-net apiimage node /home/aof_api/server.js
 docker container run -p 9137:7000 --net=aof-net apiimage node /home/aof_api/server.js
 docker container run -p 9138:7000 --net=aof-net apiimage node /home/aof_api/server.js

 docker container run -p 9139:80 --net=aof-net hbl/nginx nginx -g 'deamon off;'

docker container run -p 9140:80 --net=aof-net hbl/ngnix


docker exec --privileged b85f  rm -r /home/aof_api/*


docker container run -p 9134:5488 --net=aof-net apiimage node /home/aof_api/server.js


docker container run -p 9139:7000 --net=aof-net 4d905 node /home/aof_api/server.js

docker exec --privileged 183d  ls -al /home/aof_api/


sudo usermod -a -G docker $haroonmumtaz

#find which port is open on server
sudo lsof -i -P -n | grep LISTEN

#load image from tar
docker load < imagename.tardocker 

 docker container run -p 27017:27017 hbl/mongo 


iptables -I INPUT -p tcp --dport 27017 --syn -j ACCEPT
firewall-cmd --zone=public --add-port=27017/tcp --permanent
firewall-cmd --reload

#restartr firewalld iptables
systemctl start firewalld

#find port is status 
netstat -a |grep 27017

#execute below command to find your public ip
myip="$(dig +short myip.opendns.com @resolver1.opendns.com)"
echo "My WAN/Public IP address: ${myip}"
or
if curl is installed
curl ifconfig.me
curl icanhazip.com
curl ipecho.net/plain
curl ifconfig.co


/sbin/iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 27017 -j ACCEPT


portqry -n 172.18.7.16 -p tcp [-e || -r || -o endpoint(s)] [-q]
        [-l logfile] [-sp source_port] [-sl] [-cn SNMP community name]
		
#Docker	command for mongo db config
docker exec --privileged f960  cat  /etc/mongod.conf.orig

docker container run -p 37017:27017 --net=aof-net hbl/mongo --auth


mongo
use admin
db.createUser(
  {
    user: "myUserAdmin",
    pwd: "abc123",
    roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
  }
)


docker exec --privileged 6cf1  rm -r /home/aof_api/

/var/cache/apt/archives yahan ssaray archives paray hotay hain yahan say uthalo

docker container run -p 9131:7000 --net=aof-net ac69image node /home/aof_api/server.js

(/var/lib/docker/containers/xxxx/config.v2.json) is file main ja k change karlo to change docker start file enviornment variable change nhn karsaktay after creating container so idhar say jao uar config change karlo

ODBCINI=/etc/odbc.ini
export  ODBCINI



#restart all the containers
 docker restart $(docker ps -a -q)

docker commit ac69 ac69Image
docker save -o ac69image.tar ac69image

docker container run -it 4449 --auth
docker load < 5ab6image.tar.gz

#delete image
docker rmi <IMAGE ID>

docker rmi <IMAGE ID>

docker container run -p 27017:27017 mongo --auth



db.getUser( "admin", {
   showCredentials: <Boolean>,
   showPrivileges: <Boolean>,
   showAuthenticationRestrictions: <Boolean>,
   filter: <document>
} )


db.createUser(
  {
    user: "admin",
    pwd: "admin",
    roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
  }
)





 docker container run -p 9139:80 57e2image nginx -g 'daemon off;'
 
  docker container run -p 9133:80 57e2image nginx -g 'daemon off;'
  
   docker container run -p 9139:80 hbl/nginx nginx -g 'daemon off;'

   
   
    <app-root></app-root>

<script type="text/javascript" src="runtime.ec2944dd8b20ec099bf3.js"></script><script type="text/javascript" src="polyfills.30482c28db0e6feb4d0f.js"></script><script type="text/javascript" src="main.111322e98d6f0cb6cac1.js"></script>


  docker container run -p 9139:80 -p 9139:443 57e2image nginx -g 'daemon off;'
 docker container run -p 9142:443 57e2image nginx -g 'daemon off;'


  
  docker container run -p 9139:443 57e2image nginx -g 'daemon off;'
    docker container run -p 9139:443 57e2image nginx -g 'daemon off;'
	
	
	 sudo openssl req -out certreq.csr -new -newkey rsa:2048 -nodes -keyout /app/privateKey.key
	 
	 
	  docker container run -p 9139:80  57e2image nginx -g 'daemon off;'
	  docker container run -p 9139:80  57e2image nginx -g 'daemon off;'
	  
	  docker container run -p 9132:7000 ac69image node /home/aof_api/server.js
	  docker container run -p 9134:7000 ac69image node /home/aof_api/server.js

docker container run -p 9135:80  57e2image nginx -g 'daemon off;'

	  
	  
openssl req \
-newkey rsa:2048 \
-x509 \
-nodes \
-keyout umairssl.key \
-new \
-out umairssl.crt \
-subj /CN=Hostname \
-reqexts SAN \
-extensions SAN \
-distinguished_name = <(C = ES ST = MyState L = MyCity O = MyOrg) \
-config <(cat /etc/ssl/openssl.cnf \
    <(printf '[SAN]\nsubjectAltName=DNS:dcms.hbl.com,IP:10.200.164.124')) \
-sha256 \
-days 3650



[dcms@PKHBLC1DAOWEB docker]$ sudo cp containers/6a23fc23e897a56c01ba0104856b4776180991584f050b5385a42d38b3f4116f/config.v2.json /home/dcms/


curl -H "Content-Type: text/xml; charset=utf-8" -H "SOAPAction:"  -d @your_soap_request.xml -X POST https://verification.nadra.gov.pk/bioverisys/bank/branchbankaccount

curl  –header “Content-Type: text/xml;charset=UTF-8” –data @request.xml https://verification.nadra.gov.pk/bioverisys/bank/branchbankaccount

   curl https://verification.nadra.gov.pk/bioverisys/bank/branchbankaccount?WSDL > weatherForcast.wsdl

   
   openssl pkcs12 -export -in certnew.cer -inkey privateKey.key -out certificate.pfx -certfile CACert.cer
sudo docker container run -p 9134:7000 ac69imageforlive node /home/aof_api/server.js
sudo docker container run -p 9132:7000 ac69imageforlive node /home/aof_api/server.js


docker container run -p 9140:80 ngnix
docker run -d -p 4202:4202 --volume ~/nginx:/usr/share/nginx/html nginx
sudo docker run -d -p 4202:4202 --volume ~/nginx:/usr/share/nginx/ --volume ~/nginx/html:/usr/share/nginx/html nginx

sudo docker run -d -p 9132:7000 --volume /home/dcms/9132:/home/aof_api/ --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 ac69imageforlive
sudo docker run -d -p 9134:7000 --volume /home/dcms/9134:/home/aof_api/ --volume /home/dcms/9134/Scanning:/home/aof_api/Scanning    ac69imageforlive
 



sudo mount -t cifs -o username=muhammad.saqib1,workgroup=DOEMSTIC,password=Pakistan1 //10.6.226.226/shareeveryone /mnt/mymount

[dcms@PKHBLC1DAOWEB ~]$ sudo mount -t cifs -o username=dcms.docs,workgroup=DOEMSTIC,password=Khurram@1234567,vers=3.0 //10.200.144.92/DocumentsArchive/ /home/dcms/


 nc 10.200.144.92 445 < /dev/null; echo $?
 
 sudo mount --bind /home/hr/saqib/ /var/saqib/
 mount --bind <olddir> <mountpoint>
 
sudo mount --rbind /home/hr/saqib/ /var/saqib/ *********rbin is remove binding

sudo docker run -d -p 9130:7000 hrapi_image nodemon /home/hrapi/server.js

sudo docker run -d -p 9130:7000 --volume /home/hr/9130:/home/hrapi/ hrapi_image node /home/hrapi/server.js
sudo docker run -d -p 9130:7000 hrapi_image node /home/hrapi/server.js
iptables -I INPUT -p tcp --dport 7000 --syn -j ACCEPT
sudo sysctl fs.inotify.max_user_watches=582222 && sudo sysctl -p // ager docker networking ka problem ya error anay lagay to


#find log file using docker inspect
sudo docker inspect --format='{{.LogPath}}' CONTAINER_ID


#docker events
#to get output as json
sudo docker events --filter 'container=9132' --filter 'events=restart' --format 'Type={{json .}}'  --since 19112018
#to get output in other format
sudo docker events --filter 'container=9132' --filter 'events=restart' --format 'Type={{.Type}}  Status={{.Status}}  ID={{.ID}}'  --since 19112018

#enable proxy
echo "http_proxy=http://proxy3.domestic.hbl.com:8080" > /etc/environment
echo "https_proxy=http://proxy3.domestic.hbl.com:8080" > /etc/environment

#disbale proxy
unset http_proxy
unset https_proxy




472  sudo docker run -d -p 9130:7000 hrapi_image nodemon /home/hrapi/server.js
  482  sudo docker run -d -p 7000:7000 hrapi_image nodemon /home/hrapi/server.js
  486  sudo docker run -d -p 80:7000 hrapi_image nodemon /home/hrapi/server.js
  489  sudo docker run -d -p 9130:7000 hrapi_image node /home/hrapi/server.js
  492  sudo docker run -d -p 9130:7000 hrapi_image noodemon /home/hrapi/server.js
  493  sudo docker run -d -p 7000:7000 hrapi_image noodemon /home/hrapi/server.js
  494  sudo docker run -d -p 443:7000 hrapi_image noodemon /home/hrapi/server.js
  495  sudo docker run -d -p 443:7000 hrapi_image nodemon /home/hrapi/server.js
  505  sudo docker run -d -p 9130:7000 hrapi_image nodemon /home/hrapi/server.js
  531  sudo docker run -d -p 700:7000 hrapi_image node /home/hrapi/server.js
  534  sudo docker run -d -p 7000:7000 hrapi_image node /home/hrapi/server.js
  842  sudo docker run -d -p 7000:7000 hrapi_image node /home/hrapi/server.js
  848  sudo docker run -d -p 7000:7000 hrapi_image05122019 node /home/hrapi/server.js
  891  sudo docker run -d -p 7000:7000 hrapi_image05122019 node /home/hrapi/server.js
  950  sudo docker run -d -p 7000:7000 credit-card-service-dr node /app/server.js
  953  sudo docker run -d -p 7000:7000 credit-card-service-dr:v3 node /app/server.js
  
  
  certnew.crt  dcms.cer  nginx-selfsigned.crt  nginx-selfsigned.key  privateKey.key  serverkey.pem  ssl.pass

 key: fs.readFileSync('/home/aof_api/certs/privateKey.key'),
   cert: fs.readFileSync('/home/aof_api/certs/certnew.crt'),
   passphrase: 'hbl@1234'

  docker container run -d -p 9141:443 57e2image --volume /app/9141/html:/usr/share/nginx/html --volume /app/9141/certs:/usr/share/nginx/certs nginx -g 'daemon off;'
   docker container run -p 27017:27017 --volume /home/cloud-user/27017/data:/data hbl/mongo 
   
  #mongo container setups 
  136  sudo bash masterInit --master
  152  sudo bash masterInit --master
  154  sudo bash masterInit --member
  156  sudo bash masterInit --addnode
  157  sudo bash masterInit --slavesetup
  170  sudo bash masterInit --slavesetup
  177  sudo bash masterInit --master
  178  sudo bash masterInit --slavesetup
  183  sudo bash masterInit --slave
  184  sudo bash masterInit --slavesetup
  193  sudo bash masterInit --master
  194  sudo bash masterInit --membe
  195  sudo bash masterInit --slavesetup
  205  sudo bash masterInit --master
  209  sudo bash masterInit --master
  210  sudo bash masterInit --addnode
  211  sudo bash masterInit --slavesetup
  213  sudo bash masterInit --member


for i in *; do sudo cp "$i" /app/9134/12022020/; done
find /var/ -iname '*.rpm'
cp /var/cache/yum/x86_64/7Server/rhel-7-server-rpms/packages/* .

sudo docker update --restart unless-stopped 9140
sudo docker events --filter container=9132 event=restart --since=60m



env
https_proxy=http://10.16.0.174:8080
http_proxy=http://10.16.0.174:8080
resolve.conf
nameserver 10.16.0.113
nameserver 10.16.0.112
proxy3.domestic.hbl.com 10.16.0.170

#hr app container with resolve.conf entry host and volume mounted and environment variables
docker container run -d -p 7000:7000 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 --dns-opt nameserver 10.16.0.113 --dns-opt nameserver 10.16.0.112 --volume /home/hr/app:/app/ 7000_latest

docker container run -d -p 7001:7000 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 --dns-opt nameserver=10.16.0.113 --dns-opt nameserver=10.16.0.112 --volume /home/hr/app_7001:/app/ ac69imageforlive

docker container run -d -p 7001:7001 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 --dns-opt nameserver=10.16.0.113 --dns-opt nameserver=10.16.0.112 --volume /home/hr/app_7001:/app/ ac69imageforlive

#display complete path in terminal
export PS1="\u@\h \w> " #in redhat chota w means full path and bara W means currect dir ubuntu main ulat hai
export PS1='\u@\H:\w$'




sudo docker run -d -p 9130:7000 --volume /home/hr/SPARK/volume_9130/aof_api:/home/aof_api/ --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" ac69imageforlive

sudo docker run -d -p 9131:7000 --volume /home/hr/SPARK/volume_9131/aof_api:/home/aof_api/ --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" ac69imageforlive

sudo docker run -d -p 9130:7000 --volume /home/hr/SPARK/volume_9130/aof_api:/home/aof_api/ --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 -e "https_proxy=" -e "http_proxy=" mobileapiv1

db.getProfilingStatus()
 use CONFIGURATION
db.adminCommand( { getLog : "global" } ) > /logfile
db.adminCommand( { getLog : "global" } )

sudo mount --bind /u01/document/Scanning /app/9132/Scanning
sudo mount --bind /app/9132/Scanning /app/9134/Scanning

root@mongoNode1:/# mongo | tee 12maylog.log
nodemon --max-old-space-size=9192 server.js


docker run -d -p 9132:7000 --volume /home/dcms/9132:/home/aof_api/ --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 ac69imageforlive

docker run -d -p 9143:7000 --volume /home/dcms/9143:/home/aof_api/ --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 ac69imageforlive


[12:10 PM] Mansoor Ul Hasan
    sysctl -a |grep -i vm
​[12:12 PM] Mansoor Ul Hasan
    sysctl -a |grep vm.min_free_kbytes
​[12:15 PM] Mansoor Ul Hasan
    
sysctl -w vm.min_free_kbytes=635168


mount -t cifs -o username=asad.yahya,workgroup=DOEMSTIC,password=shary0sd97*,vers=3.0 //10.6.227.37/d/ /app/9132/asadd

docker container run -d -p 7020:80 --name 7020 --volume /home/hr/HRAPP/nginx_7020/:/var/log/nginx/ firesh/nginx-lua 

docker container run -d -p 7001:7000 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 --dns-opt nameserver=10.16.0.113 --dns-opt nameserver=10.16.0.112 --volume /home/hr/HRAPP/app_7001:/app/ 4057b2cff282

docker container run -d -p 7002:7000 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 --dns-opt nameserver=10.16.0.113 --dns-opt nameserver=10.16.0.112 --volume /home/hr/HRAPP/app_7002:/app/ 4057b2cff282

docker container run -d -p 7003:7000 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 --dns-opt nameserver=10.16.0.113 --dns-opt nameserver=10.16.0.112 --volume /home/hr/HRAPP/app_7003:/app/ 4057b2cff282

docker container run -d -p 7004:7000 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 --dns-opt nameserver=10.16.0.113 --dns-opt nameserver=10.16.0.112 --volume /home/hr/HRAPP/app_7004:/app/ 4057b2cff282

docker container run -d -p 7005:7000 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 --dns-opt nameserver=10.16.0.113 --dns-opt nameserver=10.16.0.112 --volume /home/hr/HRAPP/app_7005:/app/ 4057b2cff282

cp -R app_7001/ app_7003; cp -R app_7001/ app_7004; cp -R app_7001/ app_7005; cp -R app_7001/ app_7003;

mount --bind /home/hr/logcenter/ /home/hr/HRAPP/app_7002/log
mount --bind /home/hr/logcenter/ /home/hr/HRAPP/app_7003/log;
mount --bind /home/hr/logcenter/ /home/hr/HRAPP/app_7004/log;
mount --bind /home/hr/logcenter/ /home/hr/HRAPP/app_7005/log;
mkdir /home/hr/HRAPP/app_7002/log
mkdir /home/hr/HRAPP/app_7003/log;
mkdir /home/hr/HRAPP/app_7004/log;
mkdir /home/hr/HRAPP/app_7005/log;
mv /home/hr/HRAPP/app_7002/log /home/hr/HRAPP/app_7002/log_backup
mv /home/hr/HRAPP/app_7003/log /home/hr/HRAPP/app_7003/log_backup;
mv /home/hr/HRAPP/app_7004/log /home/hr/HRAPP/app_7004/log_backup;
mv /home/hr/HRAPP/app_7005/log /home/hr/HRAPP/app_7005/log_backup;


103.140.217.35

sudo docker run -d -p 9146:7000 --name 9146  ac69imageforlive
echo "" > $(docker inspect --format='{{.LogPath}}' 9132)



sudo docker run -d -p 9130:7000 --volume /app/9132:/home/aof_api/ --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" 9132image_latest

set time zone as of system
sudo docker run -d -p 9130:7000 --volume /app/9130:/home/aof_api/ --volume /etc/localtime:/etc/localtime:ro --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" 9132image_latest

docker run -d -p 9131:7000 --volume /home/hr/SPARK/volume_9131/aof_api:/home/aof_api/ --volume /etc/localtime:/etc/localtime:ro --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" 9130_spark_jan2021

docker run -d -p 9131:7000 --volume /root/volume_9131/aof_api:/home/aof_api/ --volume /etc/localtime:/etc/localtime:ro --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 -e "https_proxy=http://10.16.0.174:8080" -e "http_proxy=http://10.16.0.174:8080" 9130_spark_jan2021

docker run -d -p 9130:7000 --volume /root/volume_9130/aof_api:/home/aof_api/ --volume /etc/localtime:/etc/localtime:ro --add-host=verification.nadra.gov.pk:10.10.32.226 --add-host=api.hbl.com:10.200.140.82 9130_spark_jan2021
